(env_1) [gr719@ee-beholder0 MSDNet-PyTorch-master]$ python onnx_2.py --model brn --trained_path /home/gr719/Downloads/Imperial2021/1.MSDNet/MSDNet-PyTorch-master/outputs/save_models/model_best.pth.tar --save_name test_out --data-root /home/gr719/Downloads/Imperial2021/1.MSDNet/MSDNet-PyTorch-master/cifar-100-python/cifar-100-python --data cifar100 --arch msdnet --batch-size 64 --epochs 300 --nBlocks 7  --stepmode even --step 2 --base 4 --nChannels 16 -j 16
5
3
1
2
2b
6
Running BranchyNet Test
building network of steps: 
[4, 2, 2, 2, 2, 2, 2] 16
 ********************** Block 1  **********************
<class 'int'>
<class 'int'>
<class 'int'>
|		inScales 3 outScales 3 inChannels 16 outChannels 6		|

|		inScales 3 outScales 3 inChannels 22 outChannels 6		|

|		inScales 3 outScales 3 inChannels 28 outChannels 6		|

|		inScales 3 outScales 3 inChannels 34 outChannels 6		|

<class 'int'>
<class 'int'>
 ********************** Block 2  **********************
|		inScales 3 outScales 3 inChannels 40 outChannels 6		|

|		inScales 3 outScales 3 inChannels 46 outChannels 6		|

<class 'int'>
<class 'int'>
 ********************** Block 3  **********************
|		inScales 3 outScales 2 inChannels 52 outChannels 6		|
<class 'int'>
<class 'int'>
|		Transition layer inserted! (max), inChannels 58, outChannels 29	|

|		inScales 2 outScales 2 inChannels 29 outChannels 6		|

<class 'int'>
<class 'int'>
 ********************** Block 4  **********************
|		inScales 2 outScales 2 inChannels 35 outChannels 6		|

|		inScales 2 outScales 2 inChannels 41 outChannels 6		|

<class 'int'>
<class 'int'>
 ********************** Block 5  **********************
|		inScales 2 outScales 2 inChannels 47 outChannels 6		|

|		inScales 2 outScales 2 inChannels 53 outChannels 6		|

<class 'int'>
<class 'int'>
 ********************** Block 6  **********************
|		inScales 2 outScales 1 inChannels 59 outChannels 6		|
<class 'int'>
|		Transition layer inserted! (max), inChannels 65, outChannels 32	|

|		inScales 1 outScales 1 inChannels 32 outChannels 6		|

<class 'int'>
<class 'int'>
 ********************** Block 7  **********************
|		inScales 1 outScales 1 inChannels 38 outChannels 6		|

|		inScales 1 outScales 1 inChannels 44 outChannels 6		|

<class 'int'>
<class 'int'>
STARTING RUN OF PYTORCH MODEL WITH INPUTS
PT OUT2: [tensor([[-1.7117,  0.3637,  0.9698,  1.3281,  0.5675,  0.7370, -0.9649,  0.5508,
         -1.3908,  0.8539,  2.2575,  0.4908,  0.3824, -0.0862, -0.0079,  0.7913,
          0.8016, -1.4935,  1.1096,  0.6563, -1.6145, -1.2667,  1.4157,  0.0577,
         -0.6914,  2.1354,  1.2819,  1.0817,  0.0414,  1.8837, -1.1231,  0.1385,
          1.6307,  0.2872,  0.5656, -1.0053, -0.3917,  0.4709,  0.5720, -0.4720,
          1.4287, -0.9874,  0.8690, -1.1918,  0.7198,  0.2559,  1.0135, -1.5470,
         -2.6975, -0.7180,  1.1644,  0.9926, -3.6812, -2.3923, -1.6527,  1.7524,
         -0.9043, -0.2212, -1.2406, -0.3279, -0.9613, -0.7626, -1.7020, -0.1680,
          1.3799,  2.1636,  0.2946,  1.2372, -1.2258, -1.3745, -1.8190, -1.6445,
          1.5906,  0.6552,  0.9188, -1.0231, -0.9665,  1.1605,  1.0415,  0.3526,
          0.9944, -0.7774, -1.9094, -0.0381,  1.1262, -0.0714,  1.0676,  0.9530,
          0.1071,  0.0444, -0.7998,  1.7252, -0.7146,  1.5934, -1.9192, -1.3073,
         -0.6441,  0.9046, -0.5684, -0.7503]], grad_fn=<AddmmBackward>), tensor([[-2.1026, -0.2921,  1.6281,  0.6819,  0.2533, -0.1439, -0.7192,  0.9738,
         -1.0381,  1.2359,  2.2800,  1.1260,  0.5225, -0.4021,  0.5707,  0.9155,
         -0.0511, -0.8561,  1.9046,  0.8061, -1.2313, -1.1747,  1.7467, -0.4041,
         -0.5976,  2.3229,  1.7895,  0.4256, -0.7156,  1.0277, -0.9672,  0.2252,
          1.1409,  0.2596, -0.4092, -0.2625, -0.9351,  0.7218,  0.3541, -0.8781,
          2.0179, -0.5886, -0.0418, -0.6872,  1.8142,  1.1596,  1.6652, -1.1297,
         -2.2012,  0.2863,  0.8104,  0.5316, -2.7214, -3.0312, -1.0024,  2.3769,
         -0.6598, -0.2515, -2.2463,  0.4313, -1.4160, -0.3798, -0.7125, -1.2362,
          1.2568,  1.3502, -0.7197,  0.8975, -1.0708, -0.7007, -1.2510, -0.8901,
          1.4648,  0.9865,  0.2951, -1.3831,  0.0550,  0.7069,  0.2031,  0.3237,
          0.5712, -0.6633,  0.3987, -0.6413,  1.7107,  0.0384, -1.0590,  0.7897,
         -0.6285, -0.8665, -0.2719,  1.0040,  0.0440,  0.8613, -2.1214, -1.2354,
         -1.1405, -0.4511, -0.1432, -0.2390]], grad_fn=<AddmmBackward>), tensor([[-1.9452, -0.2554,  1.0251,  0.2254,  1.0457, -0.1087, -1.0372,  0.1815,
         -1.8798,  0.2622,  2.2703,  0.8960,  0.1539, -0.7945,  1.0028,  0.9996,
          0.2930, -1.2248,  1.5340,  0.7638, -1.4780, -0.7725,  1.5367, -0.8921,
         -1.2118,  1.6656,  1.0547,  1.2481, -0.4065,  2.0092, -1.3908,  0.7083,
          2.5712,  1.3074,  0.3929,  0.1696, -0.6688,  0.8837, -0.3942, -0.4962,
          1.3497, -1.1942,  1.5967, -2.1768,  1.5900,  1.4648,  1.6842, -0.6106,
         -2.1930,  0.0179,  0.9157,  0.7822, -3.0012, -2.0645, -0.8768,  1.8813,
         -0.9079,  0.4384, -2.7838,  0.4283, -1.4506, -0.5115, -0.8982, -0.0736,
          1.3288,  0.9520, -1.0608,  0.3470, -1.5913, -0.6039, -1.0900, -1.6691,
          1.4688,  0.3415,  0.7274, -0.5479, -0.9670,  0.5524,  0.6567,  0.1142,
          0.6817, -1.0133, -0.9217, -0.2979,  1.7295, -0.7096,  0.1058,  1.1775,
         -0.5896, -1.5352, -0.7316,  2.0138,  0.3395,  1.3856, -1.7713, -1.1826,
          0.3175, -0.2169,  0.1551, -0.5454]], grad_fn=<AddmmBackward>), tensor([[-2.5134, -0.6150,  1.4987,  0.4063,  1.6297, -0.4581, -1.1153,  0.6747,
         -0.8166,  0.4140,  2.5010,  0.6786,  0.4660, -0.2251,  0.1306,  0.7476,
         -0.2677, -1.3616,  1.3250,  1.0996, -1.9876, -1.1457,  0.4240, -1.2638,
         -0.9161,  2.2030,  1.5072,  0.7631, -0.4749,  1.3254, -0.8557,  0.8159,
          2.1092,  0.5482,  0.4417, -0.0071, -0.8580,  0.2557,  0.2152, -0.7013,
          2.0414, -0.8492,  0.2837, -2.0618,  1.4614,  0.8580,  1.5228, -0.9053,
         -2.0578, -0.6424,  0.9175,  1.0841, -3.3682, -2.7423, -1.2114,  2.5100,
         -0.3382,  0.2468, -2.4109, -0.3806, -2.1332, -0.5879, -0.9999,  0.1501,
          1.8693,  2.3067, -1.0344,  1.3274, -1.7247, -0.0193, -1.6066, -1.6780,
          2.0974,  1.4151,  0.7875, -0.5699, -0.0582,  0.5343,  0.2391,  0.4478,
          1.0821, -1.0583, -0.1659, -0.7394,  1.6500, -0.2634, -0.5153,  1.2222,
         -0.1436, -0.7544, -0.0215,  0.7061,  0.4824,  1.2564, -2.3179, -0.7792,
          0.2926, -0.4377, -0.0191, -0.7942]], grad_fn=<AddmmBackward>), tensor([[-2.4803e+00, -3.7117e-01,  1.5451e+00, -2.4097e-01,  1.1670e+00,
         -7.9485e-02, -9.0983e-01,  1.2708e+00, -1.3702e+00,  6.2002e-01,
          1.7103e+00,  1.2022e+00,  8.3392e-01, -8.1124e-01,  9.8902e-01,
          9.5048e-01, -1.1588e-01, -1.0022e+00,  1.6956e+00,  6.1841e-01,
         -2.8392e+00, -1.3865e-01,  4.3917e-01, -1.1280e+00,  1.4458e-01,
          1.5102e+00,  1.2727e+00,  5.7961e-01, -8.5196e-01,  1.2168e+00,
         -6.6909e-01,  7.0777e-01,  2.3297e+00,  5.0813e-01,  3.6145e-01,
         -6.8245e-02, -1.1947e+00,  9.3511e-01,  1.3529e+00, -1.5770e+00,
          1.6999e+00, -1.0363e+00,  4.6291e-01, -1.3356e+00,  1.1880e+00,
          1.4093e+00,  1.3745e+00, -1.5371e+00, -2.1355e+00,  2.7895e-01,
          7.0035e-01,  6.8525e-01, -3.1134e+00, -2.9493e+00, -1.2509e+00,
          2.4804e+00, -6.3930e-01, -6.7424e-01, -2.9820e+00,  7.8070e-01,
         -1.6339e+00, -2.9225e-01, -9.2915e-01, -8.7825e-01,  2.0369e+00,
          1.6649e+00, -1.2935e-01,  1.9406e+00, -1.8185e+00, -2.6461e-03,
         -2.1752e+00, -1.7547e+00,  2.0768e+00,  5.3220e-01,  1.5463e+00,
          7.9435e-01, -8.5184e-01,  3.0397e-01, -2.3710e-01,  7.9448e-01,
          7.3950e-01, -3.6418e-01,  2.2644e-01, -8.8085e-01,  7.4590e-01,
         -2.4481e-01, -1.6144e+00,  6.3416e-01,  1.6287e-02, -1.1878e+00,
          1.3224e-01,  9.1358e-01, -2.0465e-01,  1.9298e+00, -2.1503e+00,
         -1.1134e+00,  9.8662e-02, -2.2604e-01,  1.6097e-01, -1.1838e-01]],
       grad_fn=<AddmmBackward>), tensor([[-1.2925, -0.5761,  1.7551,  0.3858,  1.1782, -0.7280, -1.0525,  0.6750,
         -0.4558,  1.0519,  1.4445,  0.8101,  0.0297, -0.8697,  1.1716,  1.0259,
         -0.1081, -1.0189,  1.0409,  1.2419, -1.7999, -0.2828,  0.6141, -1.0095,
         -0.2090,  2.3545,  2.4468, -0.3646, -0.5767,  1.3673, -2.0093,  0.6483,
          2.1408,  0.3760,  0.0775, -0.2315, -0.6002, -0.4493,  0.2027, -1.0451,
          1.5547, -0.6736,  0.9709, -1.2899,  0.8096,  0.6174,  1.2187, -1.1145,
         -1.0439, -1.0684,  0.4974,  0.7954, -3.5460, -1.5802, -1.1795,  2.3689,
         -1.1677,  0.4036, -2.3219,  0.3088, -2.4244, -0.8752, -1.5072, -0.8704,
          1.9906,  1.8404, -0.3605,  1.7139, -1.4792, -0.1561, -1.3368, -1.5313,
          2.4979,  0.3689,  1.2545, -0.8439, -0.7077,  0.4871, -0.1747,  0.4993,
          0.6423, -0.9349, -0.6184,  0.4221,  1.4506,  0.2619, -0.4420,  1.3188,
         -0.1105, -0.1438, -0.5636,  0.9201,  0.4401,  1.2971, -1.7973, -1.2595,
         -0.3204, -1.0007,  0.3797, -0.2461]], grad_fn=<AddmmBackward>), tensor([[-2.2018, -0.2000,  2.1937, -0.0216,  0.8679, -0.4881, -0.6025,  0.1621,
         -0.6190,  0.1748,  1.4011,  1.0475,  0.6797, -0.0691,  0.9550,  0.4382,
         -0.0368, -1.4611,  1.8196,  0.9888, -1.3850, -0.4050,  0.3710, -0.9744,
         -0.2279,  1.3238,  1.8371,  0.0291, -1.0884,  2.0551, -0.8972,  0.6095,
          2.2247,  0.4561,  0.3825, -0.5294, -0.4988,  0.5305,  0.1054, -1.4692,
          1.3008, -1.1887,  0.7009, -1.2434,  0.8113,  0.5619,  1.6955, -0.9483,
         -1.2970, -0.7147,  0.8506,  0.7315, -3.8799, -2.0304, -1.0915,  1.9372,
         -1.2534, -0.0291, -2.3297,  0.1475, -1.5304,  0.1540, -0.8662, -0.4239,
          2.5512,  2.1937, -0.2491,  1.4169, -1.3188, -1.3312, -1.1021, -1.2071,
          1.9937,  0.3457,  1.1078, -0.9167, -0.6686,  0.2790,  0.5887,  0.5667,
          0.4589, -0.7895, -0.8982, -0.2413,  0.9822, -0.4338, -1.1205,  1.8072,
          0.6350, -0.1601, -0.6119,  0.9882,  0.6311,  1.3153, -2.0974, -0.9017,
         -0.0115, -0.6221,  0.2361, -0.9596]], grad_fn=<AddmmBackward>)]
SAVING MODEL TO ONNX:  test_out.onnx
Traceback (most recent call last):
  File "onnx_2.py", line 220, in <module>
    main()
  File "onnx_2.py", line 215, in main
    brn_main(md_pth=args.trained_path, save_name=args.save_name, args=args)
  File "onnx_2.py", line 150, in brn_main
    save_path = to_onnx(model, shape, batch_size=bs, fname=save_name, test_in=test_x)
  File "onnx_2.py", line 77, in to_onnx
    scr_model = torch.jit.script(model)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/__init__.py", line 1255, in script
    return torch.jit._recursive.recursive_script(obj)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 534, in recursive_script
    return create_script_module(nn_module, infer_methods_to_compile(nn_module))
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 296, in create_script_module
    return create_script_module_impl(nn_module, concrete_type, cpp_module, stubs)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 336, in create_script_module_impl
    script_module = torch.jit.RecursiveScriptModule._construct(cpp_module, init_fn)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/__init__.py", line 1593, in _construct
    init_fn(script_module)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 328, in init_fn
    scripted = recursive_script(orig_value)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 534, in recursive_script
    return create_script_module(nn_module, infer_methods_to_compile(nn_module))
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 296, in create_script_module
    return create_script_module_impl(nn_module, concrete_type, cpp_module, stubs)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 336, in create_script_module_impl
    script_module = torch.jit.RecursiveScriptModule._construct(cpp_module, init_fn)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/__init__.py", line 1593, in _construct
    init_fn(script_module)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 328, in init_fn
    scripted = recursive_script(orig_value)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 534, in recursive_script
    return create_script_module(nn_module, infer_methods_to_compile(nn_module))
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 296, in create_script_module
    return create_script_module_impl(nn_module, concrete_type, cpp_module, stubs)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 336, in create_script_module_impl
    script_module = torch.jit.RecursiveScriptModule._construct(cpp_module, init_fn)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/__init__.py", line 1593, in _construct
    init_fn(script_module)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 328, in init_fn
    scripted = recursive_script(orig_value)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 534, in recursive_script
    return create_script_module(nn_module, infer_methods_to_compile(nn_module))
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 296, in create_script_module
    return create_script_module_impl(nn_module, concrete_type, cpp_module, stubs)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 340, in create_script_module_impl
    create_methods_from_stubs(concrete_type, stubs)
  File "/home/gr719/anaconda3/envs/env_1/lib/python3.7/site-packages/torch/jit/_recursive.py", line 259, in create_methods_from_stubs
    concrete_type._create_methods(defs, rcbs, defaults)
RuntimeError: 
Tried to access nonexistent attribute or method '__len__' of type '__torch__.torch.nn.modules.container.ModuleList'. Did you forget to initialize an attribute in __init__()?:
  File "/home/gr719/Downloads/Imperial2021/1.MSDNet/MSDNet-PyTorch-master/models/msdnet.py", line 117
    def forward(self, x):
        res = []
        for i in range(len(self.layers)):
                       ~~~ <--- HERE
            x = self.layers[i](x)
            res.append(x)


